import csv
import os
import tkinter as tk
from tkinter import messagebox, ttk

def save_to_csv(final_score: dict, filename: str = "results.csv") -> None:
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    os.makedirs(os.path.dirname(filename), exist_ok=True)
    
    file_exists = os.path.exists(filename)
    need_header = (not file_exists) or (os.path.getsize(filename) == 0)
    
    try:
        with open(filename, "a", newline="", encoding="utf-8") as file:
            writer = csv.DictWriter(
                file,
                fieldnames=["order_amount", "tips_percentage", "tip", "total"],
                delimiter=";"
            )
            if need_header:
                writer.writeheader()
            writer.writerow(final_score)
    except Exception as e:
        messagebox.showerror("–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {e}")

def calculate_tip(order_amount: float, tips_percentage: int) -> dict:
    tip = order_amount / 100 * tips_percentage
    return {
        'tip': tip,
        'total': tip + order_amount,
        'tips_percentage': tips_percentage,
        'order_amount': order_amount
    }

def calculate():
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
        order_amount = float(entry_order.get())
        tips_percentage = int(entry_tip.get())
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        if order_amount <= 0:
            messagebox.showerror("–û—à–∏–±–∫–∞", "–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º")
            return
            
        if not 0 <= tips_percentage <= 100:
            messagebox.showerror("–û—à–∏–±–∫–∞", "–ü—Ä–æ—Ü–µ–Ω—Ç —á–∞–µ–≤—ã—Ö –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –º–µ–∂–¥—É 0 –∏ 100")
            return
            
        # –í—ã—á–∏—Å–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        result = calculate_tip(order_amount, tips_percentage)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –º–µ—Ç–∫—É —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
        result_text = f"–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞: ‚ÇΩ{result['order_amount']:.2f}\n"
        result_text += f"–ß–∞–µ–≤—ã–µ ({result['tips_percentage']}%): ‚ÇΩ{result['tip']:.2f}\n"
        result_text += f"–û–±—â–∞—è —Å—É–º–º–∞: ‚ÇΩ{result['total']:.2f}"
        
        label_result.config(text=result_text)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è —Å—á–µ—Ç–∞
        btn_split.pack(pady=5)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
        global current_result
        current_result = result
        
    except ValueError:
        messagebox.showerror("–û—à–∏–±–∫–∞", "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —á–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è")

def split_bill():
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –æ–∫–Ω–æ –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è —Å—á–µ—Ç–∞
    split_window = tk.Toplevel(root)
    split_window.title("–†–∞–∑–¥–µ–ª–∏—Ç—å —Å—á–µ—Ç")
    split_window.geometry("300x150")
    
    tk.Label(split_window, text="–ù–∞ —Å–∫–æ–ª—å–∫–æ —á–µ–ª–æ–≤–µ–∫ —Ä–∞–∑–¥–µ–ª–∏—Ç—å —Å—á–µ—Ç?").pack(pady=10)
    
    entry_persons = tk.Entry(split_window)
    entry_persons.pack(pady=5)
    
    def calculate_split():
        try:
            persons = int(entry_persons.get())
            if persons <= 0:
                messagebox.showerror("–û—à–∏–±–∫–∞", "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–ª–æ–≤–µ–∫ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º")
                return
                
            amount_per_person = current_result['total'] / persons
            messagebox.showinfo("–†–µ–∑—É–ª—å—Ç–∞—Ç", f"–° –∫–∞–∂–¥–æ–≥–æ: ‚ÇΩ{amount_per_person:.2f}")
            split_window.destroy()
            
        except ValueError:
            messagebox.showerror("–û—à–∏–±–∫–∞", "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ")
    
    tk.Button(split_window, text="–†–∞—Å—Å—á–∏—Ç–∞—Ç—å", command=calculate_split).pack(pady=10)

# –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
root = tk.Tk()
root.title("üßÆ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —á–∞–µ–≤—ã—Ö")
root.geometry("400x350")

# –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
current_result = None

# –°–æ–∑–¥–∞–µ–º –∏ —Ä–∞–∑–º–µ—â–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
frame = ttk.Frame(root, padding="20")
frame.pack(fill=tk.BOTH, expand=True)

tk.Label(frame, text="–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞ (‚ÇΩ):", font=("Arial", 12)).pack(pady=5)
entry_order = tk.Entry(frame, font=("Arial", 12))
entry_order.pack(pady=5)

tk.Label(frame, text="–ü—Ä–æ—Ü–µ–Ω—Ç —á–∞–µ–≤—ã—Ö (%):", font=("Arial", 12)).pack(pady=5)
entry_tip = tk.Entry(frame, font=("Arial", 12))
entry_tip.pack(pady=5)

btn_calculate = tk.Button(frame, text="–†–∞—Å—Å—á–∏—Ç–∞—Ç—å", command=calculate, 
                         bg="#4CAF50", fg="white", font=("Arial", 12))
btn_calculate.pack(pady=15)

label_result = tk.Label(frame, text="", font=("Arial", 12), justify=tk.LEFT)
label_result.pack(pady=10)

btn_split = tk.Button(frame, text="–†–∞–∑–¥–µ–ª–∏—Ç—å —Å—á–µ—Ç", command=split_bill,
                     bg="#2196F3", fg="white", font=("Arial", 10))

# –ó–∞–ø—É—Å–∫–∞–µ–º –≥–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª
root.mainloop()